"use strict";(()=>{var e={};e.id=278,e.ids=[278],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},89908:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>w,patchFetch:()=>f,requestAsyncStorage:()=>g,routeModule:()=>x,serverHooks:()=>P,staticGenerationAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{POST:()=>y,dynamic:()=>h});var a=r(79182),i=r(72007),n=r(56719),o=r(93442),u=r(57978),p=r(11826),c=r(83178),d=r(82595),l=r(61901);let h="force-dynamic";async function y(e){try{let t;let r=await (0,u.getServerSession)(p.L);if(!r?.user?.id)return o.NextResponse.json({error:"Unauthorized"},{status:401});let{text:s,entryId:a,provider:i,options:n}=await e.json();if(!s||!i)return o.NextResponse.json({error:"Text and provider are required"},{status:400});let h=await c._.apiKey.findUnique({where:{userId_provider:{userId:r.user.id,provider:i}}});if(!h||!h.isActive)return o.NextResponse.json({error:`No active ${i} API key found. Please add one in your security settings.`},{status:400});try{t=l.$.decryptApiKey(h.encryptedKey)}catch(e){return console.error("Failed to decrypt API key:",e),o.NextResponse.json({error:"Failed to decrypt API key. Please update your API key."},{status:500})}if(a){if(!await c._.entry.findFirst({where:{id:a,userId:r.user.id}}))return o.NextResponse.json({error:"Entry not found"},{status:404});await c._.entry.update({where:{id:a},data:{processingStatus:"GENERATING",aiProvider:i}})}let y=await d.W.processText(s,i,t,n);if(await c._.apiKey.update({where:{id:h.id},data:{lastUsed:new Date}}),y.success)return a&&await c._.entry.update({where:{id:a},data:{aiNotes:y.notes,processingStatus:"COMPLETED"}}),o.NextResponse.json({success:!0,notes:y.notes,categories:y.categories,keyPoints:y.keyPoints,emotionalContext:y.emotionalContext,provider:y.provider});return a&&await c._.entry.update({where:{id:a},data:{processingStatus:"FAILED"}}),o.NextResponse.json({success:!1,error:y.error},{status:400})}catch(r){console.error("AI processing error:",r);let{entryId:t}=await e.json().catch(()=>({}));if(t)try{await c._.entry.update({where:{id:t},data:{processingStatus:"FAILED"}})}catch(e){console.error("Failed to update entry status:",e)}return o.NextResponse.json({error:"Internal server error"},{status:500})}}let x=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/ai/process-text/route",pathname:"/api/ai/process-text",filename:"route",bundlePath:"app/api/ai/process-text/route"},resolvedPagePath:"/home/ubuntu/naggery_app/app/app/api/ai/process-text/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:m,serverHooks:P}=x,w="/api/ai/process-text/route";function f(){return(0,n.patchFetch)({serverHooks:P,staticGenerationAsyncStorage:m})}},61901:(e,t,r)=>{r.d(t,{$:()=>o});var s=r(84770),a=r.n(s),i=r(80238),n=r.n(i);class o{static{this.ENCRYPTION_KEY=process.env.ENCRYPTION_KEY||"default-key-change-in-production"}static{this.ALGORITHM="aes-256-gcm"}static generateRandomString(e=32){return a().randomBytes(e).toString("hex")}static hashPassword(e){let t=a().randomBytes(16).toString("hex"),r=a().pbkdf2Sync(e,t,1e4,64,"sha512").toString("hex");return`${t}:${r}`}static verifyPassword(e,t){let[r,s]=t.split(":");return s===a().pbkdf2Sync(e,r,1e4,64,"sha512").toString("hex")}static encryptData(e){try{return n().AES.encrypt(e,this.ENCRYPTION_KEY).toString()}catch(e){throw console.error("Encryption error:",e),Error("Failed to encrypt data")}}static decryptData(e){try{return n().AES.decrypt(e,this.ENCRYPTION_KEY).toString(n().enc.Utf8)}catch(e){throw console.error("Decryption error:",e),Error("Failed to decrypt data")}}static generateSecureToken(e=64){return a().randomBytes(e).toString("base64url")}static createSecureHash(e){return a().createHash("sha256").update(e).digest("hex")}static isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}static isValidPhone(e){return/^\+[1-9]\d{1,14}$/.test(e)}static sanitizePhone(e){return e.replace(/[^\d+]/g,"")}static formatPhone(e){let t=this.sanitizePhone(e);return t.startsWith("+")?t:`+1${t}`}static isPasswordStrong(e){let t=[];return e.length<8&&t.push("Password must be at least 8 characters long"),/[A-Z]/.test(e)||t.push("Password must contain at least one uppercase letter"),/[a-z]/.test(e)||t.push("Password must contain at least one lowercase letter"),/\d/.test(e)||t.push("Password must contain at least one number"),/[!@#$%^&*(),.?":{}|<>]/.test(e)||t.push("Password must contain at least one special character"),{isStrong:0===t.length,errors:t}}static encryptApiKey(e){if(!e||""===e.trim())throw Error("API key cannot be empty");return this.encryptData(e.trim())}static decryptApiKey(e){if(!e||""===e.trim())throw Error("Encrypted API key cannot be empty");return this.decryptData(e.trim())}static validateApiKeyFormat(e,t){if(!e||""===e.trim())return{isValid:!1,error:"API key cannot be empty"};let r=e.trim();switch(t){case"OPENAI":if(!r.startsWith("sk-"))return{isValid:!1,error:'OpenAI API keys must start with "sk-"'};if(r.length<20)return{isValid:!1,error:"OpenAI API key appears to be too short"};break;case"CLAUDE":if(!r.startsWith("sk-ant-"))return{isValid:!1,error:'Claude API keys must start with "sk-ant-"'};if(r.length<20)return{isValid:!1,error:"Claude API key appears to be too short"};break;default:return{isValid:!1,error:"Unsupported API provider"}}return{isValid:!0}}static maskApiKey(e){if(!e||e.length<8)return"****";let t=e.substring(0,4),r=e.substring(e.length-4),s="*".repeat(Math.max(4,e.length-8));return`${t}${s}${r}`}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[372,609,103,390,472,238,27],()=>r(89908));module.exports=s})();