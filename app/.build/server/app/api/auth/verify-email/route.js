"use strict";(()=>{var e={};e.id=748,e.ids=[748],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},67301:(e,t,i)=>{i.r(t),i.d(t,{originalPathname:()=>v,patchFetch:()=>g,requestAsyncStorage:()=>h,routeModule:()=>f,serverHooks:()=>R,staticGenerationAsyncStorage:()=>w});var a={};i.r(a),i.d(a,{GET:()=>d,POST:()=>p,dynamic:()=>l});var s=i(79182),r=i(72007),n=i(56719),o=i(93442),c=i(83178),u=i(18449),m=i(35229);let l="force-dynamic";async function d(e){try{let{searchParams:t}=new URL(e.url),i=t.get("token");if(!i)return o.NextResponse.json({error:"Verification token is required"},{status:400});let a=e.headers.get("x-forwarded-for")||"unknown",s=await m.p.checkVerificationAttempts(a);if(!s.allowed)return o.NextResponse.json({error:s.message},{status:429});if(!await u.g.verifyEmailToken(i))return o.NextResponse.json({error:"Invalid or expired verification token"},{status:400});let r=await u.g.getVerificationRequest(i);if(!r)return o.NextResponse.json({error:"Verification request not found"},{status:404});return await c._.user.update({where:{id:r.userId},data:{emailVerified:new Date,isActive:!0}}),o.NextResponse.json({success:!0,message:"Email verified successfully! You can now log in."},{status:200})}catch(e){return console.error("Email verification error:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function p(e){try{let{email:t}=await e.json();if(!t)return o.NextResponse.json({error:"Email is required"},{status:400});let i=await m.p.checkVerificationAttempts(t);if(!i.allowed)return o.NextResponse.json({error:i.message},{status:429});let a=await c._.user.findUnique({where:{email:t}});if(!a)return o.NextResponse.json({error:"User not found"},{status:404});if(a.emailVerified)return o.NextResponse.json({error:"Email is already verified"},{status:400});let{token:s}=await u.g.createVerificationRequest(a.id,"EMAIL_VERIFICATION");return console.log(`
=== EMAIL VERIFICATION RESEND ===`),console.log(`Email: ${t}`),console.log(`Verification URL: ${process.env.NEXTAUTH_URL}/verify-email?token=${s}`),console.log(`================================
`),o.NextResponse.json({success:!0,message:"Verification email sent successfully"},{status:200})}catch(e){return console.error("Resend verification error:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}let f=new s.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/auth/verify-email/route",pathname:"/api/auth/verify-email",filename:"route",bundlePath:"app/api/auth/verify-email/route"},resolvedPagePath:"/home/ubuntu/naggery_app/app/app/api/auth/verify-email/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:h,staticGenerationAsyncStorage:w,serverHooks:R}=f,v="/api/auth/verify-email/route";function g(){return(0,n.patchFetch)({serverHooks:R,staticGenerationAsyncStorage:w})}},83178:(e,t,i)=>{i.d(t,{_:()=>s});var a=i(53524);let s=globalThis.prisma??new a.PrismaClient},35229:(e,t,i)=>{i.d(t,{p:()=>r});var a=i(39103),s=i.n(a);class r{constructor(){this.defaultOptions={windowMs:9e5,maxAttempts:5,message:"Too many attempts, please try again later"},this.cache=new(s())({stdTTL:this.defaultOptions.windowMs/1e3,checkperiod:60})}async checkRateLimit(e,t={}){let i={...this.defaultOptions,...t},a=`rate_limit:${e}`,s=Date.now();i.windowMs;let r=this.cache.get(a)||{count:0,resetTime:s+i.windowMs};s>r.resetTime&&(r={count:0,resetTime:s+i.windowMs}),r.count++;let n=Math.ceil((r.resetTime-s)/1e3);this.cache.set(a,r,n);let o=r.count<=i.maxAttempts;return{allowed:o,remaining:Math.max(0,i.maxAttempts-r.count),resetTime:r.resetTime,message:o?void 0:i.message}}async incrementAttempt(e){await this.checkRateLimit(e)}async resetRateLimit(e){let t=`rate_limit:${e}`;this.cache.del(t)}static async checkLoginAttempts(e){return new r().checkRateLimit(`login:${e}`,{windowMs:9e5,maxAttempts:5,message:"Too many login attempts. Please try again in 15 minutes."})}static async checkVerificationAttempts(e){return new r().checkRateLimit(`verification:${e}`,{windowMs:3e5,maxAttempts:3,message:"Too many verification attempts. Please wait 5 minutes."})}static async check2FAAttempts(e){return new r().checkRateLimit(`2fa:${e}`,{windowMs:6e5,maxAttempts:5,message:"Too many 2FA attempts. Please wait 10 minutes."})}static async checkSMSAttempts(e){return new r().checkRateLimit(`sms:${e}`,{windowMs:36e5,maxAttempts:3,message:"Too many SMS requests. Please wait 1 hour."})}}},18449:(e,t,i)=>{i.d(t,{g:()=>n});var a=i(84770),s=i.n(a),r=i(83178);class n{static{this.CODE_LENGTH=6}static{this.TOKEN_LENGTH=32}static{this.EMAIL_EXPIRY=864e5}static{this.SMS_EXPIRY=6e5}static{this.MAX_ATTEMPTS=5}static generateVerificationCode(){return Math.floor(1e5+9e5*Math.random()).toString()}static generateSecureToken(){return s().randomBytes(this.TOKEN_LENGTH).toString("hex")}static async createVerificationRequest(e,t,i,a){let s=this.generateSecureToken(),n=this.generateVerificationCode(),o="EMAIL_VERIFICATION"===t||"EMAIL_CHANGE"===t?this.EMAIL_EXPIRY:this.SMS_EXPIRY;await r._.verificationRequest.deleteMany({where:{userId:e,type:t,expires:{lt:new Date}}});let c=await r._.verificationRequest.create({data:{userId:e,type:t,token:s,code:"SMS_VERIFICATION"===t?n:void 0,expires:new Date(Date.now()+o)}});return{token:s,code:"SMS_VERIFICATION"===t?n:void 0,expires:c.expires}}static async verifyCode(e,t){let i=await r._.verificationRequest.findUnique({where:{token:e}});return!(!i||i.expires<new Date)&&!i.verified&&!(i.attempts>=this.MAX_ATTEMPTS)&&(await r._.verificationRequest.update({where:{id:i.id},data:{attempts:i.attempts+1}}),i.code===t&&(await r._.verificationRequest.update({where:{id:i.id},data:{verified:!0}}),!0))}static async verifyEmailToken(e){let t=await r._.verificationRequest.findUnique({where:{token:e}});return!(!t||t.expires<new Date)&&!t.verified&&("EMAIL_VERIFICATION"===t.type||"EMAIL_CHANGE"===t.type)&&(await r._.verificationRequest.update({where:{id:t.id},data:{verified:!0}}),!0)}static async getVerificationRequest(e){return r._.verificationRequest.findUnique({where:{token:e},include:{user:!0}})}static async cleanupExpiredRequests(){await r._.verificationRequest.deleteMany({where:{expires:{lt:new Date}}})}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var i=e=>t(t.s=e),a=t.X(0,[372,657,296],()=>i(67301));module.exports=a})();