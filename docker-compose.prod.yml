
# Naggery App - Production Docker Compose
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: naggery-postgres-prod
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./deployment/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    # Only expose if needed for external access
    # ports:
    #   - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - naggery-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Naggery Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: naggery-app-prod
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      
      # NextAuth
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      
      # AbacusAI
      ABACUSAI_API_KEY: ${ABACUSAI_API_KEY}
      
      # App Settings
      NODE_ENV: production
      SEED_DATABASE: ${SEED_DATABASE:-false}
      
      # Security Settings
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      
      # Rate Limiting
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-5}
      
      # Email Settings
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_SERVICE: ${EMAIL_SERVICE}
      EMAIL_API_KEY: ${EMAIL_API_KEY}
      
      # SMS Settings
      SMS_SERVICE: ${SMS_SERVICE}
      SMS_API_KEY: ${SMS_API_KEY}
      
      # Production Optimizations
      NEXT_TELEMETRY_DISABLED: 1
    ports:
      - "${APP_PORT:-3000}:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - naggery-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Security
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Reverse Proxy (optional - for production with SSL)
  nginx:
    image: nginx:alpine
    container_name: naggery-nginx
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
    networks:
      - naggery-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_prod_data:
    driver: local

networks:
  naggery-network:
    driver: bridge
